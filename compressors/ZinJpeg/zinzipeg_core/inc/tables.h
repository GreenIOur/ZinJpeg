
/* tables from JPEG standard
const unsigned char qtable_std_lum[8][8] =
{
	{16, 11, 10, 16, 24, 40, 51, 61},
	{12, 12, 14, 19, 26, 58, 60, 55},
	{14, 13, 16, 24, 40, 57, 69, 56},
	{14, 17, 22, 29, 51, 87, 80, 62},
	{18, 22, 37, 56, 68,109,103, 77},
	{24, 35, 55, 64, 81,104,113, 92},
	{49, 64, 78, 87,103,121,120,101},
	{72, 92, 95, 98,112,100,103, 99}
};

const unsigned char qtable_std_chrom[8][8] =
{
	{17, 18, 24, 47, 99, 99, 99, 99},
	{18, 21, 26, 66, 99, 99, 99, 99},
	{24, 26, 56, 99, 99, 99, 99, 99},
	{47, 66, 99, 99, 99, 99, 99, 99},
	{99, 99, 99, 99, 99, 99, 99, 99},
	{99, 99, 99, 99, 99, 99, 99, 99},
	{99, 99, 99, 99, 99, 99, 99, 99},
	{99, 99, 99, 99, 99, 99, 99, 99}
};

// Windows Paint tables
const unsigned char qtable_paint_lum[8][8] =
{
	{ 8,  6,  5,  8, 12, 20, 26, 31}, 
	{ 6,  6,  7, 10, 13, 29, 30, 28},
	{ 7,  7,  8, 12, 20, 29, 35, 28},
	{ 7,  9, 11, 15, 26, 44, 40, 31},
	{ 9, 11, 19, 28, 34, 55, 52, 39},
	{12, 18, 28, 32, 41, 52, 57, 46},
	{25, 32, 39, 44, 52, 61, 60, 51},
	{36, 46, 48, 49, 56, 50, 52, 50}
};

const unsigned char qtable_paint_chrom[8][8] =
{
	{ 9,  9, 12, 24, 50, 50, 50, 50},
	{ 9, 11, 13, 33, 50, 50, 50, 50},
	{12, 13, 28, 50, 50, 50, 50, 50},
	{24, 33, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50}
};
*/


#define QTAB_DIV	512

// as you can see I use Paint tables
static const unsigned char qtable_0_lum[8][8] =
{
	{ 8,  6,  5,  8, 12, 20, 26, 31}, 
	{ 6,  6,  7, 10, 13, 29, 30, 28},
	{ 7,  7,  8, 12, 20, 29, 35, 28},
	{ 7,  9, 11, 15, 26, 44, 40, 31},
	{ 9, 11, 19, 28, 34, 55, 52, 39},
	{12, 18, 28, 32, 41, 52, 57, 46},
	{25, 32, 39, 44, 52, 61, 60, 51},
	{36, 46, 48, 49, 56, 50, 52, 50}
};
//standart q table from wich derive the different table depending on quality factor
static const unsigned char std_q_table[8][8]= 
{ 
    { 16, 11, 10, 16, 24, 40, 51, 61},
    { 12, 12, 14, 19, 26, 58, 60, 55},
    { 14, 13, 16, 24, 40, 57, 69, 56},
    { 14, 17, 22, 29, 51, 87, 80, 62},
    { 18, 22, 37, 56, 68, 109, 103, 77},
    { 24, 35, 55, 64, 81, 104, 113, 92},
    { 49, 64, 78, 87, 103, 121, 120, 101},
    { 72, 92, 95, 98, 112, 100, 103, 99}
};

//in the table we already store ratio 1024/val for convenient (avoid ratio)
/*  
	{ 64, 93, 102, 64, 43, 26, 20, 17},
	{ 85, 85, 73, 54, 39, 18, 17, 19},
	{ 73, 79, 64, 43, 26, 18, 15, 18},
	{ 73, 60, 46, 35, 20, 12, 13, 17},
	{ 57, 47, 28, 18, 15, 9, 10, 13},
	{ 43, 29, 19, 16, 13, 10, 9, 11},
	{ 21, 13, 16, 12, 10, 8, 9, 10},
	{ 14, 11, 11, 10, 9, 10, 10, 10}
  
};*/
//Q=80
/*
static const unsigned char qtable_0_lum_80[8][8] =
{
	{6,   5,	5,	6,	10,	18,	24,	29},
	{5,   5,	5,	8,	11,	27,	28,	26},
	{5,   5,	6,	10,	18,	27,	33,	26},
	{5,   7,	9,	13,	24,	42,	38,	29},
	{7,   9,	17,	26,	32,	53,	50,	37},
	{10, 16,	26,	30,	39,	50,	55,	44},
	{23, 30,	37,	42,	50,	59,	58,	49},
	{34, 44,	46,	47,	54,	48,	50,	48}

};

//Q=25
static const unsigned char qtable_0_lum_25[8][8] =
{
	{17,	13,	11,	17,	25,	41,	53,	63},
	{13,	13,	15,	21,	27,	59,	61,	57},
	{15,	15,	17,	25,	41,	59,	71,	57},
	{15,	19,	23,	31,	53,	89,	81,	63},
	{19,	23,	39,	57,	69,	111,	105,	79},
	{25,	37,	57,	65,	83,	105,	115,	93},
	{51,	65,	79,	89,	105,	123,	121,	103},
	{73,	93,	97,	99,	113,	101,	105,	101}

};
*/

static const unsigned char qtable_0_chrom[8][8] =
{
	{ 9,  9, 12, 24, 50, 50, 50, 50},
	{ 9, 11, 13, 33, 50, 50, 50, 50},
	{12, 13, 28, 50, 50, 50, 50, 50},
	{24, 33, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50},
	{50, 50, 50, 50, 50, 50, 50, 50}
};

// 1024/qtable_0_lum[][]
// Q-MATRIX
static const unsigned char qtable_lum[8][8] =
{
	{128,171,205,128, 85, 51, 39, 33},
	{171,171,146,102, 79, 35, 34, 37},
	{146,146,128, 85, 51, 35, 29, 37},
	{146,114, 93, 68, 39, 23, 26, 33},
	{114, 93, 54, 37, 30, 19, 20, 26},
	{ 85, 57, 37, 32, 25, 20, 18, 22},
	{ 41, 32, 26, 23, 20, 17, 17, 20},
	{ 28, 22, 21, 21, 18, 20, 20, 20}
};


//qtable_lum_2
static const unsigned char qtable_lum_2[8][8] =
{
	{148, 191, 225, 148, 105, 71, 59, 53},
	{191, 191, 166, 122,  99, 55, 54, 57},
	{166, 166, 148, 105,  71, 55, 49, 57},
	{166, 134, 113,  88,  79, 43, 46, 53},
	{134, 113,  74,  57,  50, 39, 40, 46},
	{105,  77,  57,  52,  45, 40, 38, 42},
	{ 61,  52,  46,  43,  40, 37, 37, 40},
	{ 48,  32,  41,  41,  38, 40, 40, 40}
};

//qtable_lum_3
static const unsigned char qtable_lum_3[8][8] =
{
	{108, 151, 185, 108, 65, 31, 19, 13},
	{151, 151, 126,  82, 59, 15, 14, 17},
	{126, 126, 108,  65, 31, 15, 19, 17},
	{126,  94,  73,  48, 19, 13, 16, 13},
	{ 94,  73,  34,  17, 10, 13, 10, 16},
	{ 65,  37,  17,  12, 15, 15, 15, 12},
	{ 21,  12,  16,  13, 10, 12, 13, 10},
	{ 18,  18,  11,  11, 11, 11, 12, 10}
};

//qtable_lum_4
static const unsigned char qtable_lum_4[8][8] =
{
	{ 205,	205,	205,	205,	205,	205,	205,	205},
	{ 205,	205,	205,	205,	205,	205,	205,	20 },
	{ 205,	205,	205,	205,	205,	205,	20,	20 },
	{ 205,	205,	205,	205,	205,	20,	20,	20 },
	{ 205,	205,	205,	205,	20,	20,	20,	20 },
	{ 205,	205,	205,	20,	20,	20,	20,	20 },
	{ 205,	205,	20,	20,	20,	20,	20,	20 },
	{ 205,	20,	20,	20,	20,	20,	20,	20 }

};

//qtable_lum_5
static const unsigned char qtable_lum_5[8][8] =
{
	{ 205,	205,	17,	17,	17,	17,	17,	17 },
	{ 205,	17,	17,	17,	17,	17,	17,	17 },
	{ 17,	17,	17,	17,	17,	17,	17,	17 },
	{ 17,	17,	17,	17,	17,	17,	17,	17 },
	{ 17,	17,	17,	17,	17,	17,	17,	17 },
	{ 17,	17,	17,	17,	17,	17,	17,	17 },
	{ 17,	17,	17,	17,	17,	17,	17,	17 },
	{ 17,	17,	17,	17,	17,	17,	17,	17 }

};



// 1024/qtable_0_chrom[][]
static const unsigned char qtable_chrom[8][8] =
{
	{114,114, 85, 43, 20, 20, 20, 20},
	{114, 93, 79, 31, 20, 20, 20, 20},
	{ 85, 79, 37, 20, 20, 20, 20, 20},
	{ 43, 31, 20, 20, 20, 20, 20, 20},
	{ 20, 20, 20, 20, 20, 20, 20, 20},
	{ 20, 20, 20, 20, 20, 20, 20, 20},
	{ 20, 20, 20, 20, 20, 20, 20, 20},
	{ 20, 20, 20, 20, 20, 20, 20, 20}
};

// zig-zag table
static const unsigned char zig[64] =
{
	 0,
	 1, 8,
	16, 9, 2, 
	 3,10,17,24,
	32,25,18,11, 4,
	 5,12,19,26,33,40,
	48,41,34,27,20,13, 6,
	 7,14,21,28,35,42,49,56,
	57,50,43,36,29,22,15,
	23,30,37,44,51,58,
	59,52,45,38,31,
	39,46,53,60,
	61,54,47,
	55,62,
	63
};

static const unsigned char std_dc_luminance_nrcodes[17] =
{
	0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0
};
static const unsigned char std_dc_luminance_values[12] =
{
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
};

static const unsigned char std_dc_chrominance_nrcodes[17] =
{
	0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0
};
static const unsigned char std_dc_chrominance_values[12] =
{
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
};

static const unsigned char std_ac_luminance_nrcodes[17] =
{
	0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d
};

static const unsigned char std_ac_luminance_values[162] =
{
	0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,
	0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
	0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
	0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
	0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
	0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
	0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
	0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
	0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
	0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
	0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
	0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
	0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
	0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
	0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
	0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
	0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
	0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
	0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
	0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
	0xf9, 0xfa
};

static const unsigned char std_ac_chrominance_nrcodes[17] =
{
	0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77
};

static const unsigned char std_ac_chrominance_values[162] =
{
	0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,
	0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
	0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,
	0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,
	0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,
	0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,
	0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,
	0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
	0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
	0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
	0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
	0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
	0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,
	0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,
	0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,
	0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,
	0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,
	0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
	0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,
	0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
	0xf9, 0xfa
};

const unsigned char HYDClen[12] =
{
	0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x05,
	0x06, 0x07, 0x08, 0x09
};

static const unsigned char HCDClen[12] =
{
	0x02, 0x02, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x08, 0x09, 0x0a, 0x0b
};

static const unsigned short HYDCbits[12] =
{
	0x0000, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x000e, 0x001e,
	0x003e, 0x007e, 0x00fe, 0x01fe
};

static const unsigned short HCDCbits[12] =
{
	0x0000, 0x0001, 0x0002, 0x0006, 0x000e, 0x001e, 0x003e, 0x007e,
	0x00fe, 0x01fe, 0x03fe, 0x07fe
};


static const unsigned char HYAClen[16][12] =
{
	{0x04, 0x02, 0x02, 0x03, 0x04, 0x05, 0x07, 0x08, 0x0a, 0x10, 0x10, 0x00},	// 00 - 0f
	{0x00, 0x04, 0x05, 0x07, 0x09, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 10 - 1f
	{0x00, 0x05, 0x08, 0x0a, 0x0c, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 20 - 2f
	{0x00, 0x06, 0x09, 0x0c, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 30 - 3f
	{0x00, 0x06, 0x0a, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 40 - 4f
	{0x00, 0x07, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 50 - 5f
	{0x00, 0x07, 0x0c, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 60 - 6f
	{0x00, 0x08, 0x0c, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 70 - 7f
	{0x00, 0x09, 0x0f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 80 - 8f
	{0x00, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 90 - 9f
	{0x00, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// a0 - af
	{0x00, 0x0a, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// b0 - bf
	{0x00, 0x0a, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// c0 - cf
	{0x00, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// d0 - df
	{0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// e0 - ef
	{0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00}
};

static const unsigned short HYACbits[16][12] =
{
	{0xFFFA, 0xFFF0, 0xFFF1, 0xFFF4, 0xFFFB, 0xFFFA, 0xFFF8, 0xFFF8, 0xFFF6, 0xFF82, 0xFF83, 0x0000},	// 00 - 0f
	{0x0000, 0xFFFC, 0xFFFB, 0xFFF9, 0xFFF6, 0xFFF6, 0xFF84, 0xFF85, 0xFF86, 0xFF87, 0xFF88, 0x0000},	// 10 - 1f
	{0x0000, 0xFFFC, 0xFFF9, 0xFFF7, 0xFFF4, 0xFF89, 0xFF8A, 0xFF8B, 0xFF8C, 0xFF8D, 0xFF8E, 0x0000},	// 20 - 2f
	{0x0000, 0xFFFA, 0xFFF7, 0xFFF5, 0xFF8F, 0xFF90, 0xFF91, 0xFF92, 0xFF93, 0xFF94, 0xFF95, 0x0000},	// 30 - 3f
	{0x0000, 0xFFFB, 0xFFF8, 0xFF96, 0xFF97, 0xFF98, 0xFF99, 0xFF9A, 0xFF9B, 0xFF9C, 0xFF9D, 0x0000},	// 40 - 4f
	{0x0000, 0xFFFA, 0xFFF7, 0xFF9E, 0xFF9F, 0xFFA0, 0xFFA1, 0xFFA2, 0xFFA3, 0xFFA4, 0xFFA5, 0x0000},	// 50 - 5f
	{0x0000, 0xFFFB, 0xFFF6, 0xFFA6, 0xFFA7, 0xFFA8, 0xFFA9, 0xFFAA, 0xFFAB, 0xFFAC, 0xFFAD, 0x0000},	// 60 - 6f
	{0x0000, 0xFFFA, 0xFFF7, 0xFFAE, 0xFFAF, 0xFFB0, 0xFFB1, 0xFFB2, 0xFFB3, 0xFFB4, 0xFFB5, 0x0000},	// 70 - 7f
	{0x0000, 0xFFF8, 0xFFC0, 0xFFB6, 0xFFB7, 0xFFB8, 0xFFB9, 0xFFBA, 0xFFBB, 0xFFBC, 0xFFBD, 0x0000},	// 80 - 8f
	{0x0000, 0xFFF9, 0xFFBE, 0xFFBF, 0xFFC0, 0xFFC1, 0xFFC2, 0xFFC3, 0xFFC4, 0xFFC5, 0xFFC6, 0x0000},	// 90 - 9f
	{0x0000, 0xFFFA, 0xFFC7, 0xFFC8, 0xFFC9, 0xFFCA, 0xFFCB, 0xFFCC, 0xFFCD, 0xFFCE, 0xFFCF, 0x0000},	// a0 - af
	{0x0000, 0xFFF9, 0xFFD0, 0xFFD1, 0xFFD2, 0xFFD3, 0xFFD4, 0xFFD5, 0xFFD6, 0xFFD7, 0xFFD8, 0x0000},	// b0 - bf
	{0x0000, 0xFFFA, 0xFFD9, 0xFFDA, 0xFFDB, 0xFFDC, 0xFFDD, 0xFFDE, 0xFFDF, 0xFFE0, 0xFFE1, 0x0000},	// c0 - cf
	{0x0000, 0xFFF8, 0xFFE2, 0xFFE3, 0xFFE4, 0xFFE5, 0xFFE6, 0xFFE7, 0xFFE8, 0xFFE9, 0xFFEA, 0x0000},	// d0 - df
	{0x0000, 0xFFEB, 0xFFEC, 0xFFED, 0xFFEE, 0xFFEF, 0xFFF0, 0xFFF1, 0xFFF2, 0xFFF3, 0xFFF4, 0x0000},	// e0 - ef
	{0xFFF9, 0xFFF5, 0xFFF6, 0xFFF7, 0xFFF8, 0xFFF9, 0xFFFA, 0xFFFB, 0xFFFC, 0xFFFD, 0xFFFE, 0x0000}
};

static const unsigned char HCAClen[16][12] =
{
	{0x02, 0x02, 0x03, 0x04, 0x05, 0x05, 0x06, 0x07, 0x09, 0x0a, 0x0c, 0x00},	// 00 - 0f
	{0x00, 0x04, 0x06, 0x08, 0x09, 0x0b, 0x0c, 0x10, 0x10, 0x10, 0x10, 0x00},	// 10 - 1f
	{0x00, 0x05, 0x08, 0x0a, 0x0c, 0x0f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 20 - 2f
	{0x00, 0x05, 0x08, 0x0a, 0x0c, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 30 - 3f
	{0x00, 0x06, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 40 - 4f
	{0x00, 0x06, 0x0a, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 50 - 5f
	{0x00, 0x07, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 60 - 6f
	{0x00, 0x07, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 70 - 7f
	{0x00, 0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 80 - 8f
	{0x00, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// 90 - 9f
	{0x00, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// a0 - af
	{0x00, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// b0 - bf
	{0x00, 0x09, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// c0 - cf
	{0x00, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// d0 - df
	{0x00, 0x0e, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00},	// e0 - ef
	{0x0a, 0x0f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00}
};

static const unsigned short HCACbits[16][12] =
{
	{0x0000, 0x0001, 0x0004, 0x000a, 0x0018, 0x0019, 0x0038, 0x0078, 0x01f4, 0x03f6, 0x0ff4, 0x0000},	// 00 - 0f
	{0x0000, 0x000b, 0x0039, 0x00f6, 0x01f5, 0x07f6, 0x0ff5, 0xff88, 0xff89, 0xff8a, 0xff8b, 0x0000},	// 10 - 1f
	{0x0000, 0x001a, 0x00f7, 0x03f7, 0x0ff6, 0x7fc2, 0xff8c, 0xff8d, 0xff8e, 0xff8f, 0xff90, 0x0000},	// 20 - 2f
	{0x0000, 0x001b, 0x00f8, 0x03f8, 0x0ff7, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, 0xff96, 0x0000},	// 30 - 3f
	{0x0000, 0x003a, 0x01f6, 0xff97, 0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c, 0xff9d, 0xff9e, 0x0000},	// 40 - 4f
	{0x0000, 0x003b, 0x03f9, 0xff9f, 0xffa0, 0xffa1, 0xFFA2, 0xFFA3, 0xFFA4, 0xFFA5, 0xFFA6, 0x0000},	// 50 - 5f
	{0x0000, 0x0079, 0x07f7, 0xffa7, 0xffa8, 0xffa9, 0xffaa, 0xffab, 0xFFAc, 0xFFAf, 0xFFAe, 0x0000},	// 60 - 6f
	{0x0000, 0x007a, 0x07f8, 0xffaf, 0xffb0, 0xFFB1, 0xFFB2, 0xFFB3, 0xFFB4, 0xFFB5, 0xFFB6, 0x0000},	// 70 - 7f
	{0x0000, 0x00f9, 0xffb7, 0xFFB8, 0xFFB9, 0xFFBa, 0xFFBb, 0xFFBc, 0xFFBd, 0xFFBe, 0xFFBf, 0x0000},	// 80 - 8f
	{0x0000, 0x01f7, 0xffc0, 0xffc1, 0xFFC2, 0xFFC3, 0xFFC4, 0xFFC5, 0xFFC6, 0xFFC7, 0xFFC8, 0x0000},	// 90 - 9f
	{0x0000, 0x01f8, 0xffc9, 0xFFCa, 0xFFCb, 0xFFCc, 0xFFCd, 0xFFCe, 0xFFCf, 0xFFd0, 0xFFd1, 0x0000},	// a0 - af
	{0x0000, 0x01f9, 0xFFD2, 0xFFD3, 0xFFD4, 0xFFD5, 0xFFD6, 0xFFD7, 0xFFD8, 0xFFD9, 0xFFDa, 0x0000},	// b0 - bf
	{0x0000, 0x01fa, 0xFFDb, 0xFFDc, 0xFFDd, 0xFFDe, 0xFFDf, 0xFFe0, 0xFFe1, 0xFFe2, 0xFFe3, 0x0000},	// c0 - cf
	{0x0000, 0x07f9, 0xFFE4, 0xFFE5, 0xFFE6, 0xFFE7, 0xFFE8, 0xFFE9, 0xFFEa, 0xFFEb, 0xFFEc, 0x0000},	// d0 - df
	{0x0000, 0x3fe0, 0xffed, 0xFFEe, 0xFFEf, 0xFFf0, 0xFFF1, 0xFFF2, 0xFFF3, 0xFFF4, 0xFFF5, 0x0000},	// e0 - ef
	{0x03fa, 0x7fc3, 0xFFF6, 0xFFF7, 0xFFF8, 0xFFF9, 0xFFFA, 0xFFFB, 0xFFFC, 0xFFFD, 0xFFFE, 0x0000}
};
